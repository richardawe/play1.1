name: Build for all platforms

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual triggering

jobs:
  build:
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macos

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # macOS already has WebKit framework built-in, no additional installation needed
        echo "macOS WebKit framework is already available"
        # Ensure we have the latest Xcode command line tools
        xcode-select --install || true
        # Prevent any WebKit installation attempts
        echo "Skipping WebKit installation - using system WebKit"

    - name: Install dependencies
      run: npm ci

    - name: Build the application
      run: |
        echo "Building for target: ${{ matrix.target }}"
        echo "Platform: ${{ matrix.platform }}"
        echo "OS: ${{ matrix.os }}"
        # Use custom build script to prevent WebKit installation issues
        ./build-script.sh ${{ matrix.target }}
      env:
        CARGO_INCREMENTAL: 0
        CARGO_NET_RETRY: 2
        TAURI_PRIVATE_KEY: ""
        TAURI_KEY_PASSWORD: ""
        # Disable WebKit installation
        TAURI_BUNDLE_ACTIVE: "false"
        # Prevent any WebKit installation attempts
        WEBKIT_DISABLE_INSTALL: "true"

    - name: Upload macOS DMG
      if: matrix.platform == 'macos'
      uses: actions/upload-artifact@v4
      with:
        name: play-macos-${{ github.sha }}
        path: src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg

    - name: Upload Linux AppImage
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: play-linux-${{ github.sha }}
        path: src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage

    - name: Upload Windows MSI
      if: matrix.platform == 'windows'
      uses: actions/upload-artifact@v4
      with:
        name: play-windows-${{ github.sha }}
        path: src-tauri/target/${{ matrix.target }}/release/bundle/msi/*.msi

    - name: Upload Windows EXE
      if: matrix.platform == 'windows'
      uses: actions/upload-artifact@v4
      with:
        name: play-windows-exe-${{ github.sha }}
        path: src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*.exe
