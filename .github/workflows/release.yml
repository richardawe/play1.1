name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux
            asset_name: Play-linux-x86_64.AppImage
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows
            asset_name: Play-windows-x86_64.msi
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macos
            asset_name: Play-macos-aarch64.dmg

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev protobuf-compiler libsoup2.4-dev libsoup-2.4-dev

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # macOS already has WebKit framework built-in, no additional installation needed
        echo "macOS WebKit framework is already available"
        # Install protobuf for lance-encoding dependency
        brew install protobuf
        # Install libsoup for soup2-sys dependency
        brew install libsoup

    - name: Install dependencies
      run: npm ci

    - name: Build the application
      run: npm run tauri build -- --target ${{ matrix.target }}

    - name: Upload macOS DMG
      if: matrix.platform == 'macos'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg

    - name: Upload Linux AppImage
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage

    - name: Upload Windows MSI
      if: matrix.platform == 'windows'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: src-tauri/target/${{ matrix.target }}/release/bundle/msi/*.msi

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/*.dmg
          ./artifacts/*.AppImage
          ./artifacts/*.msi
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
